import pyaudio
import time
import struct
import sys
import math

THRESHOLD_START = 0.1
CLAP_MAX_HIGH_SECONDS = 0.2
BACKGROUND_SECONDS = 10
CHUNK_SECONDS = 0.015

RATE = 44100

FORMAT = pyaudio.paInt16
CHANNELS = 1 if sys.platform == 'darwin' else 2

CHUNK = int(RATE * CHUNK_SECONDS)
BACKGROUND_CHUNKS = int(BACKGROUND_SECONDS / CHUNK_SECONDS)
CLAP_MAX_HIGH_CHUNKS = int(CLAP_MAX_HIGH_SECONDS / CHUNK_SECONDS)

def situi(silsb, simsb = 0):
    return (((silsb + (simsb << 8)) + 0x7fff) % 0x10000) - 0x7fff

def rootmeansquare(block):
    BLOCK_SIZE = len(block) // 2
    s = 0.0
    for i in range(BLOCK_SIZE):
        iNorm = situi(block[i<<1], block[(i<<1) + 1]) / 32768.0
        s += iNorm * iNorm
    
    return math.sqrt(s / BLOCK_SIZE)

highChunks = 0

p = pyaudio.PyAudio()
stream = p.open(format=FORMAT, channels=CHANNELS, rate=RATE, input=True)
for _ in range(0, 1000):
    block = stream.read(CHUNK)
    print(rootmeansquare(block))
    if rootmeansquare(block) > THRESHOLD_START:
        highChunks += 1
    else:
        if 1 <= highChunks <= CLAP_MAX_HIGH_CHUNKS:
            print("clap detected")
        highChunks = 0

stream.close()
p.terminate()